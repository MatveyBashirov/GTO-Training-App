// Mocks generated by Mockito 5.4.6 from annotations
// in trainings_app/test/exercise_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:sqflite/sqflite.dart' as _i5;
import 'package:supabase_flutter/supabase_flutter.dart' as _i6;
import 'package:trainings_app/models/exercise.dart' as _i9;
import 'package:trainings_app/services/database/exercise_manager.dart' as _i2;
import 'package:trainings_app/services/database/user_stats_manager.dart' as _i4;
import 'package:trainings_app/services/database/workout_manager.dart' as _i3;
import 'package:trainings_app/training_database.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeExerciseManager_0 extends _i1.SmartFake
    implements _i2.ExerciseManager {
  _FakeExerciseManager_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWorkoutManager_1 extends _i1.SmartFake
    implements _i3.WorkoutManager {
  _FakeWorkoutManager_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserStatsManager_2 extends _i1.SmartFake
    implements _i4.UserStatsManager {
  _FakeUserStatsManager_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabase_3 extends _i1.SmartFake implements _i5.Database {
  _FakeDatabase_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFunctionsClient_4 extends _i1.SmartFake
    implements _i6.FunctionsClient {
  _FakeFunctionsClient_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseStorageClient_5 extends _i1.SmartFake
    implements _i6.SupabaseStorageClient {
  _FakeSupabaseStorageClient_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeClient_6 extends _i1.SmartFake
    implements _i6.RealtimeClient {
  _FakeRealtimeClient_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestClient_7 extends _i1.SmartFake
    implements _i6.PostgrestClient {
  _FakePostgrestClient_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGoTrueClient_8 extends _i1.SmartFake implements _i6.GoTrueClient {
  _FakeGoTrueClient_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQueryBuilder_9 extends _i1.SmartFake
    implements _i6.SupabaseQueryBuilder {
  _FakeSupabaseQueryBuilder_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSupabaseQuerySchema_10 extends _i1.SmartFake
    implements _i6.SupabaseQuerySchema {
  _FakeSupabaseQuerySchema_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePostgrestFilterBuilder_11<T1> extends _i1.SmartFake
    implements _i6.PostgrestFilterBuilder<T1> {
  _FakePostgrestFilterBuilder_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRealtimeChannel_12 extends _i1.SmartFake
    implements _i6.RealtimeChannel {
  _FakeRealtimeChannel_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ExerciseDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockExerciseDatabase extends _i1.Mock implements _i7.ExerciseDatabase {
  MockExerciseDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ExerciseManager get exerciseManager => (super.noSuchMethod(
        Invocation.getter(#exerciseManager),
        returnValue: _FakeExerciseManager_0(
          this,
          Invocation.getter(#exerciseManager),
        ),
      ) as _i2.ExerciseManager);

  @override
  _i3.WorkoutManager get workoutManager => (super.noSuchMethod(
        Invocation.getter(#workoutManager),
        returnValue: _FakeWorkoutManager_1(
          this,
          Invocation.getter(#workoutManager),
        ),
      ) as _i3.WorkoutManager);

  @override
  _i4.UserStatsManager get userStatsManager => (super.noSuchMethod(
        Invocation.getter(#userStatsManager),
        returnValue: _FakeUserStatsManager_2(
          this,
          Invocation.getter(#userStatsManager),
        ),
      ) as _i4.UserStatsManager);

  @override
  _i8.Future<_i5.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i8.Future<_i5.Database>.value(_FakeDatabase_3(
          this,
          Invocation.getter(#database),
        )),
      ) as _i8.Future<_i5.Database>);

  @override
  set exerciseManager(_i2.ExerciseManager? _exerciseManager) =>
      super.noSuchMethod(
        Invocation.setter(
          #exerciseManager,
          _exerciseManager,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set workoutManager(_i3.WorkoutManager? _workoutManager) => super.noSuchMethod(
        Invocation.setter(
          #workoutManager,
          _workoutManager,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set userStatsManager(_i4.UserStatsManager? _userStatsManager) =>
      super.noSuchMethod(
        Invocation.setter(
          #userStatsManager,
          _userStatsManager,
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ExerciseManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockExerciseManager extends _i1.Mock implements _i2.ExerciseManager {
  MockExerciseManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i9.Exercise>> getExercises() => (super.noSuchMethod(
        Invocation.method(
          #getExercises,
          [],
        ),
        returnValue: _i8.Future<List<_i9.Exercise>>.value(<_i9.Exercise>[]),
      ) as _i8.Future<List<_i9.Exercise>>);

  @override
  _i8.Future<bool> exerciseExists(String? id) => (super.noSuchMethod(
        Invocation.method(
          #exerciseExists,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<void> insertExercises(List<_i9.Exercise>? exercises) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertExercises,
          [exercises],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [WorkoutManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockWorkoutManager extends _i1.Mock implements _i3.WorkoutManager {
  MockWorkoutManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<int> createWorkout({
    required String? title,
    required int? category,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createWorkout,
          [],
          {
            #title: title,
            #category: category,
          },
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> insertWorkoutExercise({
    required int? workoutId,
    required int? exerciseId,
    required int? reps,
    required int? orderIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWorkoutExercise,
          [],
          {
            #workoutId: workoutId,
            #exerciseId: exerciseId,
            #reps: reps,
            #orderIndex: orderIndex,
          },
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getWorkoutExercises(int? workoutId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkoutExercises,
          [workoutId],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getAllWorkouts() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllWorkouts,
          [],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<Map<String, dynamic>?> getWorkout(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getWorkout,
          [id],
        ),
        returnValue: _i8.Future<Map<String, dynamic>?>.value(),
      ) as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getWorkoutsByCategory(
          int? categoryId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWorkoutsByCategory,
          [categoryId],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<int> updateWorkout({
    required int? id,
    required String? title,
    required int? category,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateWorkout,
          [],
          {
            #id: id,
            #title: title,
            #category: category,
          },
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> deleteWorkout(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteWorkout,
          [id],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> deleteWorkoutExercises(int? workoutId) => (super.noSuchMethod(
        Invocation.method(
          #deleteWorkoutExercises,
          [workoutId],
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<int> removeExerciseFromWorkout({
    required int? workoutId,
    required int? exerciseId,
    required int? orderIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeExerciseFromWorkout,
          [],
          {
            #workoutId: workoutId,
            #exerciseId: exerciseId,
            #orderIndex: orderIndex,
          },
        ),
        returnValue: _i8.Future<int>.value(0),
      ) as _i8.Future<int>);

  @override
  _i8.Future<void> reorderWorkoutExercises({
    required int? workoutId,
    required List<int>? exerciseIdsInOrder,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #reorderWorkoutExercises,
          [],
          {
            #workoutId: workoutId,
            #exerciseIdsInOrder: exerciseIdsInOrder,
          },
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [SupabaseClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockSupabaseClient extends _i1.Mock implements _i6.SupabaseClient {
  MockSupabaseClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.FunctionsClient get functions => (super.noSuchMethod(
        Invocation.getter(#functions),
        returnValue: _FakeFunctionsClient_4(
          this,
          Invocation.getter(#functions),
        ),
      ) as _i6.FunctionsClient);

  @override
  _i6.SupabaseStorageClient get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeSupabaseStorageClient_5(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i6.SupabaseStorageClient);

  @override
  _i6.RealtimeClient get realtime => (super.noSuchMethod(
        Invocation.getter(#realtime),
        returnValue: _FakeRealtimeClient_6(
          this,
          Invocation.getter(#realtime),
        ),
      ) as _i6.RealtimeClient);

  @override
  _i6.PostgrestClient get rest => (super.noSuchMethod(
        Invocation.getter(#rest),
        returnValue: _FakePostgrestClient_7(
          this,
          Invocation.getter(#rest),
        ),
      ) as _i6.PostgrestClient);

  @override
  Map<String, String> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, String>{},
      ) as Map<String, String>);

  @override
  _i6.GoTrueClient get auth => (super.noSuchMethod(
        Invocation.getter(#auth),
        returnValue: _FakeGoTrueClient_8(
          this,
          Invocation.getter(#auth),
        ),
      ) as _i6.GoTrueClient);

  @override
  set functions(_i6.FunctionsClient? _functions) => super.noSuchMethod(
        Invocation.setter(
          #functions,
          _functions,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set storage(_i6.SupabaseStorageClient? _storage) => super.noSuchMethod(
        Invocation.setter(
          #storage,
          _storage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set realtime(_i6.RealtimeClient? _realtime) => super.noSuchMethod(
        Invocation.setter(
          #realtime,
          _realtime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set rest(_i6.PostgrestClient? _rest) => super.noSuchMethod(
        Invocation.setter(
          #rest,
          _rest,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set headers(Map<String, String>? headers) => super.noSuchMethod(
        Invocation.setter(
          #headers,
          headers,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.SupabaseQueryBuilder from(String? table) => (super.noSuchMethod(
        Invocation.method(
          #from,
          [table],
        ),
        returnValue: _FakeSupabaseQueryBuilder_9(
          this,
          Invocation.method(
            #from,
            [table],
          ),
        ),
      ) as _i6.SupabaseQueryBuilder);

  @override
  _i6.SupabaseQuerySchema schema(String? schema) => (super.noSuchMethod(
        Invocation.method(
          #schema,
          [schema],
        ),
        returnValue: _FakeSupabaseQuerySchema_10(
          this,
          Invocation.method(
            #schema,
            [schema],
          ),
        ),
      ) as _i6.SupabaseQuerySchema);

  @override
  _i6.PostgrestFilterBuilder<T> rpc<T>(
    String? fn, {
    Map<String, dynamic>? params,
    dynamic get = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rpc,
          [fn],
          {
            #params: params,
            #get: get,
          },
        ),
        returnValue: _FakePostgrestFilterBuilder_11<T>(
          this,
          Invocation.method(
            #rpc,
            [fn],
            {
              #params: params,
              #get: get,
            },
          ),
        ),
      ) as _i6.PostgrestFilterBuilder<T>);

  @override
  _i6.RealtimeChannel channel(
    String? name, {
    _i6.RealtimeChannelConfig? opts = const _i6.RealtimeChannelConfig(),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #channel,
          [name],
          {#opts: opts},
        ),
        returnValue: _FakeRealtimeChannel_12(
          this,
          Invocation.method(
            #channel,
            [name],
            {#opts: opts},
          ),
        ),
      ) as _i6.RealtimeChannel);

  @override
  List<_i6.RealtimeChannel> getChannels() => (super.noSuchMethod(
        Invocation.method(
          #getChannels,
          [],
        ),
        returnValue: <_i6.RealtimeChannel>[],
      ) as List<_i6.RealtimeChannel>);

  @override
  _i8.Future<String> removeChannel(_i6.RealtimeChannel? channel) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeChannel,
          [channel],
        ),
        returnValue: _i8.Future<String>.value(_i10.dummyValue<String>(
          this,
          Invocation.method(
            #removeChannel,
            [channel],
          ),
        )),
      ) as _i8.Future<String>);

  @override
  _i8.Future<List<String>> removeAllChannels() => (super.noSuchMethod(
        Invocation.method(
          #removeAllChannels,
          [],
        ),
        returnValue: _i8.Future<List<String>>.value(<String>[]),
      ) as _i8.Future<List<String>>);

  @override
  _i8.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}
